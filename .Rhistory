install.packages("languageR")
library(languageR)
require(languageR)
verbs = read.table("verbs", TRUE)
verbs = read.table(file = "verbs", header = TRUE)
write.table(verbs, "verbs")
verbs
meta = read.table("spanish", TRUE)
meta = read.table("spanish", TRUE)
meta = read.table(file = "spanish", header = TRUE)
write.table(meta, "spanish")
meta = 5
write.table(meta, "spanish")
meta
verbs = 5
verbs
write.table(verbs, "verbs")
verbs
help()
verbs = read.table("verbs", TRUE)
verbs
View(spanish)
View(shrinkage)
help("spanish")
data("spanish")
spanish
spanish = spanish
spanish
meta = spanish
meta
colnames = colnames(meta)
colnames
numrows = nrow(meta)
numrows
View(spanish)
View(spanishFunctionWords)
View(spanishMeta)
spanishMeta
meta = spanishMeta
meta
colnames = colnames(meta)
colnames
numrows = nrows(meta)
numrows = nrow(meta)
numrows
meta$Author
xtabs(~ Author, data = meta)
meta.pubdate = meta$PubDate
meta.pubdate
mean(meta.pubdate)
meta[order(meta$PubDate, meta$Nwords)]
meta[order(meta$PubDate, meta$Nwords),]
tapply(meta, meta$Author, mean)
tapply(meta, meta$Author, mean())
tapply(meta$PubDate, meta$Author, mean)
aggregate(meta$PubDate, meta$Author, mean)
aggregate(meta$PubDate, list(meta$Author), mean)
meta[order(meta$YearOfBirth, meta$Nwords),]
meta.pubdate = meta$PubDate
sort(meta.pubdate, TRUE)
meta.pubdate =  sort(meta.pubdate, TRUE)
sort(row.names(meta))
meta[meta$PubDate < 1980,]
sum(meta$PubDate) / length(meta)
mean(meta$PubDate)
sum(meta$PubDate) / length(meta$PubDate)
composer = data.frame(Author = c("Cela", "Mendoza", "VargasLLosa"), Favorite = c("Stravinsky", "Bach", "Villa-Lobos"))
composer
merge(meta, composer)
u
meta
meta = merge(meta, composer, by.x = "FullName", by.y = "Author")
meta
ratings
colnames(ratings)
barplot(xtabs(~ ratings$Length), xlab = "word length", col = "grey")
install.packages("MASS")
library(MASS)
truehist(ratings$Length, xlab = "word length", col = "grey")
barplot(ratings$Length, xlab = "word length", col = "grey")
barplot(xtabs(~ ratings$Length), xlab = "word length", col = "grey")
truehist(ratings$Length, xlab = "word length", col = "grey")
verbs.xtabs = xtabs(~ AnimacyOfRec + RealizationOfRec, data = verbs[verbs$AnimacyOfTheme != "animate", ])
verbs.xtabs = xtabs( Ëœ AnimacyOfRec + RealizationOfRec, data = verbs[verbs$AnimacyOfTheme != "animate", ])
verbs.xtabs = xtabs( ~ AnimacyOfRec + RealizationOfRec, data = verbs[verbs$AnimacyOfTheme != "animate", ])
verbs
verbs
View(verbs)
View(verbs)
library(languageR)
verbs
verbs.xtabs = xtabs(~ AnimacyOfRec + RealizationOfRec, data = verbs[verbs$AnimacyOfTheme != "animate", ])
verbs.xtabs
par(mfrow = c(1, 2))
barplot(verbs.xtabs, legend.text=c("anim", "inanim"))
barplot(verbs.xtabs, beside = T, legend.text = rownames(verbs.xtabs))
barplot(verbs.xtabs, legend.text=c("anim", "inanim"))
warnings()
par(mfrow = c(1, 1))
xtabs = xtabs(~ warlpiri$AnimacyOfSubject + warlpiri$WordOrder + warlpiri$AgeGroup, data = warlpiri)
xtabs
mosaicplot(xtabs)
mosaicplot(xtabs)
xtabs = xtabs(~ AnimacyOfSubject + WordOrder + AgeGroup, data = warlpiri)
mosaicplot(xtabs)
xtabs = xtabs(~ CaseMarking + AnimacyOfSubject + WordOrder + AgeGroup, data = warlpiri)
mosaicplot(xtabs)
heid2 = aggreagte(heid$RT, list(heid$Word), mean)
heid2 = aggregate(heid$RT, list(heid$Word), mean)
colnames(heid2) = c("Word", "MeanRT")
heid2 = merge(heid2, unique(heid[,c("Word", "BaseFrequency")]), by.x = "Word", by.y = "Word")
exp(heid2)
exp(heid2$MeanRT)
exp(heid2$BaseFrequency)
rt = exp(heid2$MeanRT)
bf = exp(heid2$BaseFrequency)
par(mfrow = c(1, 2))
scatterplot(rt, bf)
plot(rt, bf)
plot(heid2$MeanRT, heid2$BaseFrequency)
plot(bf, rt)
plot(heid2$BaseFrequency, heid2$MeanRT)
library(lattice)
source("functions/xylowness.r")
View(lexdec)
xylowess.fnc(RT ~ Trial | equal.count(Subject), data = lexdec)
xylowess.fnc(RT ~ Trial | Subject, data = lexdec)
par(mfrow = c(1, 1))
xylowess.fnc(RT ~ Trial | Subject, data = lexdec)
xylowess.fnc(RT ~ Trial | Subject, data = lexdec, ylab = "log RT")
dev.off()
xylowess.fnc(RT ~ Trial | Subject, data = lexdec, ylab = "log RT")
truehist(english$RTnaming)
library(MASS)
truehist(english$RTnaming)
truehist(english$RTnaming, xlab = "Naming Latency")
par(mfrow = c(1, 2))
truehist(english$RTnaming, xlab = "Naming Latency")
truehist(english$RTnaming, xlab = "Naming Latency")
density(english$RTnaming)
density = density(english$RTnaming)
plot(density)
par(mfrow = c(1,1))
bwplot(RTnaming ~ Voice | AgeSubject, data = english)
